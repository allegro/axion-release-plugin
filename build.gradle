plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id 'pl.allegro.tech.build.axion-release' version '1.13.14'
    id 'com.github.kt3k.coveralls' version '2.12.0'
    id 'com.gradle.plugin-publish' version '0.21.0'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'com.coditory.integration-test' version "1.4.0"
    id 'com.adarshr.test-logger' version '3.0.0'
}

scmVersion {
    versionCreator 'versionWithBranch'
}

group = 'pl.allegro.tech.build'
version = scmVersion.version

java {
    withSourcesJar()
    withJavadocJar()
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'ajoberstar-backup'
        url = 'https://ajoberstar.org/bintray-backup/'
    }
}

project.ext.versions = [
    jgit     : '5.12.0.202106070339-r',
    jsch     : '0.1.55',
    jschAgent: '0.0.9'
]

sourceSets {
    main {
        java { srcDirs = [] }    // no source dirs for the java compiler
        groovy { srcDirs = ["src/main/java", "src/main/groovy"] }  // compile   everything in src/ with groovy
    }
}

dependencies {
    api localGroovy()

    implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: versions.jgit
    implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.ssh.jsch', version: versions.jgit
    runtimeOnly group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.ssh.apache', version: versions.jgit
    runtimeOnly group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.ui', version: versions.jgit
    runtimeOnly group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.gpg.bc', version: versions.jgit

    implementation group: 'com.jcraft', name: 'jsch', version: versions.jsch
    implementation group: 'com.jcraft', name: 'jsch.agentproxy.core', version: versions.jschAgent
    implementation group: 'com.jcraft', name: 'jsch.agentproxy.jsch', version: versions.jschAgent
    implementation group: 'com.jcraft', name: 'jsch.agentproxy.sshagent', version: versions.jschAgent
    implementation group: 'com.jcraft', name: 'jsch.agentproxy.pageant', version: versions.jschAgent
    implementation group: 'com.jcraft', name: 'jsch.agentproxy.usocket-jna', version: versions.jschAgent
    implementation group: 'com.jcraft', name: 'jsch.agentproxy.usocket-nc', version: versions.jschAgent

    implementation group: 'com.github.zafarkhaja', name: 'java-semver', version: '0.9.0'

    testImplementation(group: 'org.ajoberstar.grgit', name: 'grgit-core', version: '4.1.0') {
        exclude group: 'org.eclipse.jgit', module: 'org.eclipse.jgit.ui'
        exclude group: 'org.eclipse.jgit', module: 'org.eclipse.jgit'
    }

    testImplementation group: 'org.testcontainers', name: 'spock', version: '1.15.3'
    testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.0-groovy-2.5'
    testImplementation group: 'cglib', name: 'cglib-nodep', version: '3.3.0'
    testImplementation group: 'org.objenesis', name: 'objenesis', version: '3.2'
    testImplementation group: 'org.apache.sshd', name: 'sshd-core', version: '2.8.0'
    testImplementation group: 'org.apache.sshd', name: 'sshd-git', version: '2.8.0'

    testImplementation gradleTestKit()
}

tasks.withType(Test) {
    useJUnitPlatform()
}

tasks.check.dependsOn test, integrationTest

// set kotlin to depend on groovy
tasks.named("compileKotlin") {
    classpath += files(sourceSets.main.groovy.classesDirectory)
}

// set groovy to not depend on Kotlin
tasks.named("compileGroovy") {
    classpath = sourceSets.main.compileClasspath
}

jacoco {
    toolVersion = '0.8.2'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

gradlePlugin {
    testSourceSets project.sourceSets.integration
    plugins {
        release {
            id = 'pl.allegro.tech.build.axion-release'
            displayName = 'axion-release-plugin'
            implementationClass = 'pl.allegro.tech.build.axion.release.ReleasePlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/allegro/axion-release-plugin'
    vcsUrl = 'https://github.com/allegro/axion-release-plugin'
    description = 'Release and version management plugin.'
    tags = ['release', 'version']
}

publishing {
    afterEvaluate {
        publications {
            withType(MavenPublication) {
                pom {
                    name = project.name
                    description = 'Gradle release and version management plugin'
                    url = 'https://github.com/allegro/axion-release-plugin'
                    inceptionYear = '2014'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'adamdubiel'
                            name = 'Adam Dubiel'
                        }
                        developer {
                            id = 'bgalek'
                            name = 'Bartosz Ga≈Çek'
                        }
                    }
                    scm {
                        url = 'https://github.com/allegro/axion-release-plugin'
                        connection = 'scm:git@github.com:allegro/axion-release-plugin.git'
                        developerConnection = 'scm:git@github.com:allegro/axion-release-plugin.git'
                    }
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = System.getenv("SONATYPE_USERNAME")
            password = System.getenv("SONATYPE_PASSWORD")
        }
    }
}

if (System.getenv("GPG_KEY_ID")) {
    signing {
        useInMemoryPgpKeys(
            System.getenv("GPG_KEY_ID"),
            System.getenv("GPG_PRIVATE_KEY"),
            System.getenv("GPG_PRIVATE_KEY_PASSWORD")
        )
        sign publishing.publications
    }
}
